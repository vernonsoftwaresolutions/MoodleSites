version: 2
jobs:
  build:
    working_directory: ~/MoodleSites
    docker:
      - image: circleci/node:argon-stretch-browsers
    environment:
      - BUCKET_NAME: "moodle.sites.lambda.deployment"
      - SITES_DNS: "sites.vssdevelopment.com"
      - HOSTED_ZONE_NAME: "vssdevelopment.com."
      - REGION: "us-east-1"
      - FUNCTION_NAME: "AwsServerlessExpressFunction"
      - DEV_STACK: "MoodleSitesDev"
      - STAGE_STACK: "MoodleSitesStage"

    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: 
          name: install dev dependencies
          command: npm install --only=dev
     # install awscli
      - run:
          name: Install dependencies
          working_directory: /
          command: 'sudo apt install python-pip python-dev && sudo  pip install awscli'
     # install newman
      - run:
          name: Install Newman
          working_directory: /
          command: 'sudo npm install newman --global'
     # set default environment
      - run:
          name: Configure Region
          working_directory: /
          command: aws configure set default.region $REGION

      - run:
          name: code-coverage
          command: 'npm run cover'

      - run:
          name: validate template
          command: 'aws cloudformation validate-template --template-body file://cloudformation.yaml'

      - run:
          name: configure dev environment
          command: 'npm run config -- --account-id=${ACCOUNT_ID} --bucket-name=${BUCKET_NAME} --stackname=${DEV_STACK}  --dnsname=${SITES_DNS} --hostedzonename=${HOSTED_ZONE_NAME} --stage=dev --region=${REGION} --function-name=${FUNCTION_NAME}'

      - run:
          name: deploy dev environment
          command: 'npm run setup'
          no_output_timeout: '25m'

      - run:
          name: integration test
          command: 'newman run integration/Sites_Collection.postman_collection.json -e integration/MOODLE_SITES_DEV.postman_environment.json'
#configure stage
      - run:
          name: reconfigure config
          command: 'npm run deconfig -- package.json simple-proxy-api.yaml cloudformation.yaml'

      - run:
          name: configure stage environment
          command: 'npm run config -- --account-id="${ACCOUNT_ID}" --bucket-name="${BUCKET_NAME}" --stackname="${STAGE_STACK}"  --dnsname="${SITES_DNS}" --hostedzonename="${HOSTED_ZONE_NAME}" --stage="stage" --region="${REGION}" --function-name="${FUNCTION_NAME}"'

      - run:
          name: deploy stage environment
          command: 'npm run setup'
          no_output_timeout: '25m'

      - run:
          name: stage integration test
          command: 'newman run integration/Sites_Collection.postman_collection.json -e integration/MOODLE_SITES_DEV.postman_environment.json'

      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: test-results.xml